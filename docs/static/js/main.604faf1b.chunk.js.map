{"version":3,"sources":["pages/about.tsx","utils/request.ts","pages/article.tsx","pages/write.tsx","App.tsx","serviceWorker.js","index.js","index.module.css"],"names":["source","escapeHtml","leftToken","rightToken","a","fetch","method","then","res","status","json","catch","err","console","log","name","title","content","category","time","Date","now","toLocaleDateString","replace","body","JSON","stringify","message","btoa","unescape","encodeURIComponent","props","useState","type","setType","articleList","setArticleList","article","setArticle","useEffect","loading","getArticleList","map","item","className","styles","onClick","getArticle","v","parse","decodeURIComponent","escape","atob","Push","recorder","clearInput","setState","text","localStorage","removeItem","save","setItem","state","toLocaleString","push","sendNewArticle","alert","getItem","this","setInterval","savedLength","length","Math","abs","clearInterval","value","placeholder","onChange","e","target","React","Component","Layout","role","aria-label","to","flagcounter","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.604faf1b.chunk.js","sourcesContent":["import React from 'react';\nimport Markdown from 'react-markdown/with-html';\nexport default () => {\n  return <Markdown\n    source={ `\n<span title=\"Gun N' Rose乐队的一首音乐，描述了一个独处的快乐的世界\">Paradise City</span> \n站点托管在Github Pages，是一套伪动态的博客系统。  \n+ 本站把任何文章、照片、评论都认为是文件资源，通过GitHub API(v3)上传到仓库，再编写一套Web GUI将用户指令转化为对这些文件资源的操作。  \n\n本站动态的部分借用了GitHub的一些功能，与正统的Web系统做个类比：\n+ GitHub Repo  &ensp;&ensp;       --> &ensp;  NoSQL数据库  \n+ GitHub Pages &ensp;             --> &ensp;  Nginx Web服务  \n+ GitHub API   &ensp;&ensp;&ensp; --> &ensp;  服务端程序  \n\n因此，本站没有真正的服务端程序，只是借助GitHub实现了静态博客的动态化。\n`}\n    escapeHtml={ false }\n  />;\n};\n","const leftToken = '61e06fdec3996fbda3c';\nconst rightToken = 'eb8094d137bf927e7e5b2';\n// 文字\nasync function getArticleList() {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'GET',\n    }\n  )\n    .then(res => {\n      if (res.status < 299) return res.json();\n      else return null;\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nasync function getArticle(name) {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article/' +\n    name +\n    '?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'GET',\n    }\n  )\n    .then(res => res.json())\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nasync function sendNewArticle(title, content, category) {\n  const time = Date.now();\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article/' +\n    title + '-' + new Date(time).toLocaleDateString().replace(/\\//g, '-') +\n    '.md?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'PUT',\n      body: JSON.stringify({\n        message: 'AutoPush Article: ' + title,\n        // @ts-ignore\n        content: btoa(\n          unescape(\n            encodeURIComponent(\n              JSON.stringify({\n                title: title,\n                content: content,\n                time: time,\n                category: category\n              })\n            )\n          )\n        ),\n      }),\n    }\n  )\n    .then(res => res.json())\n    .then(res => {\n      return true;\n    })\n    .catch(err => {\n      return false;\n    });\n}\nasync function removeArticle(title, sha) {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article/' +\n    title +\n    '.md?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'DELETE',\n      body: JSON.stringify({\n        message: 'AutoDelete article: ' + title,\n        // @ts-ignore\n        sha: sha,\n      }),\n    }\n  )\n    .then(res => res.json())\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n// 图片\nasync function getPhotoList() {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'GET',\n    }\n  )\n    .then(res => {\n      if (res.status < 299) return res.json();\n      else return null;\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nasync function getPhoto(name) {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo/' +\n    name +\n    '?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'GET',\n    }\n  )\n    .then(res => res.json())\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nasync function sendNewPhoto(title, content) {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo/' +\n    title +\n    '.png?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'PUT',\n      body: JSON.stringify({\n        message: 'AutoPush Photo: ' + title,\n        // @ts-ignore\n        content: btoa(\n          unescape(\n            encodeURIComponent(\n              JSON.stringify({\n                title: title,\n                content: content,\n                time: title,\n              })\n            )\n          )\n        ),\n      }),\n    }\n  )\n    .then(res => res.json())\n    .then(res => {\n      return true;\n    })\n    .catch(err => {\n      return false;\n    });\n}\nasync function removePhoto(title, sha) {\n  return await fetch(\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo/' +\n    title +\n    '.png?access_token=' +\n    leftToken +\n    rightToken,\n    {\n      method: 'DELETE',\n      body: JSON.stringify({\n        message: 'AutoDelete Photo: ' + title,\n        // @ts-ignore\n        sha: sha,\n      }),\n    }\n  )\n    .then(res => res.json())\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\nasync function getUserInfo() {\n  return await fetch('https://api.github.com/search/users?q=xiaozhaoqi')\n    .then(res => res.json())\n    .then(res => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nexport {\n  getArticleList,\n  getArticle,\n  sendNewArticle,\n  sendNewPhoto,\n  getPhotoList,\n  getPhoto,\n  removePhoto,\n  removeArticle,\n  getUserInfo,\n};\n","import React, { useEffect, useState } from 'react';\nimport styles from '../index.module.css';\nimport Markdown from 'react-markdown/with-html';\n\nimport { getArticleList, getArticle } from '../utils/request';\n\nexport default (props) => {\n  const [type, setType] = useState('titleList');\n  const [articleList, setArticleList] = useState([]);\n  const [article, setArticle] = useState({ title: '', content: '', time: '', category: '' });\n  useEffect(() => {\n    props.loading();\n    getArticleList().then((articleList) => {\n      props.loading();\n      setArticleList(articleList);\n    })\n  }, [])\n\n  return (\n    <div>\n      {\n        type === 'titleList' ?\n          articleList.map((item) => (\n            <h4\n              className={ styles['title'] }\n              onClick={ () => {\n                props.loading()\n                setType('articleDetail');\n                getArticle(item.name).then((v) => {\n                  props.loading()\n                  setArticle({\n                    title: JSON.parse(decodeURIComponent(escape(atob(v.content)))).title,\n                    content: JSON.parse(decodeURIComponent(escape(atob(v.content)))).content,\n                    time: JSON.parse(decodeURIComponent(escape(atob(v.content)))).time,\n                    category: JSON.parse(decodeURIComponent(escape(atob(v.content)))).category,\n                  })\n                })\n              } }\n            >{ item.name }</h4>\n          ))\n          :\n          <div>\n            <button onClick={ () => {\n              setType('titleList');\n              setArticle({ title: '', content: '', time: '', category: '' });\n            } }>返回文章列表</button>\n            <h3>{ article.title }</h3>\n            <Markdown\n              className={ styles['article-content'] }\n              source={ article.content }\n              escapeHtml={ false }\n            />\n          </div>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport Markdown from 'react-markdown/with-html';\nimport styles from '../index.module.css';\n\nimport { sendNewArticle } from '../utils/request';\n\nclass Push extends React.Component<\n  {\n    loading: Function;\n  },\n  {\n    text: string;\n    title: string;\n    category: string;\n  }\n  > {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: localStorage.getItem('writing-text') || '',\n      title: localStorage.getItem('writing-title') || '',\n      category: 'life',\n    };\n  }\n\n  componentDidMount() {\n    this.recorder = setInterval(() => {\n      const savedLength = (localStorage.getItem('writing-text') && localStorage.getItem('writing-text').length) || 0\n      if (Math.abs(savedLength - this.state.text.length) > 100) {\n        this.save()\n      }\n    }, 30000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.recorder)\n  }\n\n  recorder: any\n\n  clearInput = () => {\n    this.setState({ text: '', title: '' });\n    localStorage.removeItem('writing-title');\n    localStorage.removeItem('writing-text');\n  };\n\n  save = () => {\n    localStorage.setItem('writing-title', this.state.title);\n    localStorage.setItem('writing-text', this.state.text);\n    console.log((new Date).toLocaleString() + '，自动保存草稿成功！');\n  };\n\n  push = () => {\n    if (this.state.title) {\n      this.props.loading();\n      sendNewArticle(this.state.title, this.state.text, '技术').then(() => {\n        this.props.loading();\n        alert('恭喜，发布成功！');\n        this.clearInput();\n      })\n    } else {\n      alert('请输入标题。');\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          className={ styles['write-title'] }\n          value={ this.state.title }\n          placeholder=\"题目\"\n          onChange={ e => { this.setState({ title: e.target.value }) } }\n        />\n        <div className={ styles['editor-container'] }>\n          <textarea\n            onChange={ e => { this.setState({ text: e.target.value }) } }\n            className={ styles['write-textarea'] }\n            value={ this.state.text }\n            placeholder=\"正文\"\n          />\n          <Markdown source={ this.state.text } className={ styles['parseMarkdown'] } escapeHtml={ false } />\n        </div>\n        <div>\n          <button onClick={ this.push } className={ styles['submitButton'] }>\n            发布\n          </button>\n          <button className={ styles['submitButton'] } onClick={ this.clearInput }>重置</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Push;\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport About from './pages/about';\r\nimport Article from './pages/article';\r\nimport Write from './pages/write';\r\n\r\nimport styles from './index.module.css';\r\n\r\nexport default class Layout extends React.Component {\r\n  state = {\r\n    loading: false\r\n  }\r\n\r\n  loading = () => { this.setState({ loading: !this.state.loading }) }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <nav className={ styles['sider-menu'] }>\r\n          <div>\r\n            <span role=\"img\" aria-label=\"author\">👫</span>\r\n            <h3>Jovi & Candy</h3>\r\n          </div>\r\n          <Link to=\"/\">\r\n            <ruby>记录<rt>ji lu</rt></ruby>\r\n          </Link>\r\n          <Link to=\"/write\">\r\n            <ruby>写作<rt>xie zuo</rt></ruby>\r\n          </Link>\r\n          <Link to=\"/about\">\r\n            <ruby>关于<rt>guan yu</rt></ruby>\r\n          </Link>\r\n          <div className={ styles.flagcounter } title=\"一个简单的访问量统计\"></div>\r\n        </nav>\r\n        <div className={ styles['content'] }>\r\n          <Switch>\r\n            <Route exact path=\"/\"><Article loading={ this.loading } /></Route>\r\n            <Route exact path=\"/write\"><Write loading={ this.loading } /></Route>\r\n            <Route exact path=\"/about\"><About /></Route>\r\n          </Switch>\r\n        </div>\r\n        { this.state.loading ? <div className={ styles['loading'] }>加载中...</div> : null }\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"src_content__2Phc-\",\"loading\":\"src_loading__25YUa\",\"sider-menu\":\"src_sider-menu__IjrAu\",\"flagcounter\":\"src_flagcounter__3vBzl\",\"title\":\"src_title__1wFcY\",\"article-content\":\"src_article-content__ON2mb\",\"skeleton\":\"src_skeleton__1_feR\",\"skeletonTitle\":\"src_skeletonTitle__1vN5r\",\"skeleton-stretch\":\"src_skeleton-stretch__3LP68\",\"skeletonTime\":\"src_skeletonTime__3GTTN\",\"skeletonContent\":\"src_skeletonContent__yweeH\",\"write-title\":\"src_write-title__3r8TB\",\"editor-container\":\"src_editor-container__GXPwU\",\"parseMarkdown\":\"src_parseMarkdown__apsFu\",\"write-textarea\":\"src_write-textarea__1ghOX\",\"submitButton\":\"src_submitButton__17s1V\"};"],"sourceRoot":""}