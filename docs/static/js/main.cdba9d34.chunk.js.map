{"version":3,"sources":["index.module.css","utils/request.ts","pages/article.tsx","pages/write.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","leftToken","rightToken","props","useState","type","setType","articleList","setArticleList","title","content","time","category","sha","article","setArticle","useEffect","loading","a","async","fetch","method","then","res","status","json","catch","err","console","log","alert","map","item","dateStr","name","slice","replace","length","date","Date","parseInt","year","getFullYear","month","getMonth","day","getDate","toLocaleDateString","sort","b","className","styles","key","onClick","v","JSON","parse","decodeURIComponent","escape","atob","document","querySelector","getAttribute","body","stringify","message","location","reload","toLocaleString","source","escapeHtml","Push","recorder","clearInput","setState","text","localStorage","removeItem","save","setItem","state","push","now","btoa","unescape","encodeURIComponent","sendNewArticle","getItem","this","setInterval","savedLength","Math","abs","clearInterval","value","onChange","e","target","React","Component","Layout","coloring","setAttribute","forceUpdate","htmlFor","to","id","flagcounter","exact","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdba9d34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"src_root__2JL5O\",\"content\":\"src_content__3N9hT\",\"loading\":\"src_loading__3ANA8\",\"load\":\"src_load__2XCvD\",\"loaded\":\"src_loaded__tskcK\",\"sider-menu\":\"src_sider-menu__1Bw2a\",\"flagcounter\":\"src_flagcounter__2_mf0\",\"back\":\"src_back__6MTGB\",\"title\":\"src_title__YXAJk\",\"article-title\":\"src_article-title__2UyCo\",\"article-timestamp\":\"src_article-timestamp__9UsRM\",\"article-content\":\"src_article-content__3Q680\",\"skeleton\":\"src_skeleton__2koZ2\",\"skeletonTitle\":\"src_skeletonTitle__1JB3_\",\"skeleton-stretch\":\"src_skeleton-stretch__3DEjj\",\"skeletonTime\":\"src_skeletonTime__1KKgs\",\"skeletonContent\":\"src_skeletonContent__1pO-x\",\"write-title\":\"src_write-title__12-bU\",\"editor-container\":\"src_editor-container__2m6Aw\",\"write-textarea\":\"src_write-textarea__152_-\",\"parseMarkdown\":\"src_parseMarkdown__1ObP0\",\"submitButton\":\"src_submitButton__24YPm\"};","const leftToken = '61e06fdec3996fbda3c';\r\nconst rightToken = 'eb8094d137bf927e7e5b2';\r\n// 文字\r\nasync function getArticleList() {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  )\r\n    .then(res => {\r\n      if (res.status < 299) return res.json();\r\n      else return null;\r\n    })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      alert('获取记录失败，请检查网络连接。')\r\n    });\r\n}\r\nasync function getArticle(name) {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article/' +\r\n    name +\r\n    '?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  )\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      alert('获取记录失败，请检查网络连接。')\r\n    });\r\n}\r\nasync function sendNewArticle(title, content, category) {\r\n  const time = Date.now();\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article/' +\r\n    title + '-' + time +\r\n    '.md?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        message: 'AutoPush Article: ' + title,\r\n        // @ts-ignore\r\n        content: btoa(\r\n          unescape(\r\n            encodeURIComponent(\r\n              JSON.stringify({\r\n                title: title,\r\n                content: content,\r\n                time: time,\r\n                category: category\r\n              })\r\n            )\r\n          )\r\n        ),\r\n      }),\r\n    }\r\n  )\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return true;\r\n    })\r\n    .catch(err => {\r\n      alert('创建记录失败，请检查网络连接。')\r\n      return false;\r\n    });\r\n}\r\nasync function removeArticle(title, sha) {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/article/' +\r\n    title +\r\n    '.md?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'DELETE',\r\n      body: JSON.stringify({\r\n        message: 'AutoDelete article: ' + title,\r\n        // @ts-ignore\r\n        sha: sha,\r\n      }),\r\n    }\r\n  )\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\n// 图片\r\nasync function getPhotoList() {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  )\r\n    .then(res => {\r\n      if (res.status < 299) return res.json();\r\n      else return null;\r\n    })\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\nasync function getPhoto(name) {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo/' +\r\n    name +\r\n    '?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  )\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\nasync function sendNewPhoto(title, content) {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo/' +\r\n    title +\r\n    '.png?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        message: 'AutoPush Photo: ' + title,\r\n        // @ts-ignore\r\n        content: btoa(\r\n          unescape(\r\n            encodeURIComponent(\r\n              JSON.stringify({\r\n                title: title,\r\n                content: content,\r\n                time: title,\r\n              })\r\n            )\r\n          )\r\n        ),\r\n      }),\r\n    }\r\n  )\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return true;\r\n    })\r\n    .catch(err => {\r\n      return false;\r\n    });\r\n}\r\nasync function removePhoto(title, sha) {\r\n  return await fetch(\r\n    'https://api.github.com/repos/xiaozhaoqi/ParadiseCity/contents/files/photo/' +\r\n    title +\r\n    '.png?access_token=' +\r\n    leftToken +\r\n    rightToken,\r\n    {\r\n      method: 'DELETE',\r\n      body: JSON.stringify({\r\n        message: 'AutoDelete Photo: ' + title,\r\n        // @ts-ignore\r\n        sha: sha,\r\n      }),\r\n    }\r\n  )\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\nasync function getUserInfo() {\r\n  return await fetch('https://api.github.com/search/users?q=xiaozhaoqi')\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport {\r\n  getArticleList,\r\n  getArticle,\r\n  sendNewArticle,\r\n  sendNewPhoto,\r\n  getPhotoList,\r\n  getPhoto,\r\n  removePhoto,\r\n  removeArticle,\r\n  getUserInfo,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from '../index.module.css';\r\nimport Markdown from 'react-markdown/with-html';\r\n\r\nimport { getArticleList, getArticle, removeArticle } from '../utils/request';\r\n\r\nexport default (props) => {\r\n  const [type, setType] = useState('titleList');\r\n  const [articleList, setArticleList] = useState([]);\r\n  const [article, setArticle] = useState({ title: '', content: '', time: '', category: '', sha: '' });\r\n  useEffect(() => {\r\n    props.loading();\r\n    getArticleList().then((articleList = []) => {\r\n      props.loading();\r\n      setArticleList(articleList.map(item => {\r\n        const dateStr = item.name.slice(-16, -3).replace(/\\D*/, '')\r\n        if (dateStr.length === 13) {\r\n          const date = new Date(parseInt(dateStr))\r\n          item.year = date.getFullYear()\r\n          item.month = date.getMonth() + 1\r\n          item.day = date.getDate()\r\n          item.date = date.toLocaleDateString()\r\n        } else {\r\n          item.year = 0\r\n          item.month = 0\r\n          item.day = 0\r\n          item.date = '9999/99/99'\r\n        }\r\n        return item\r\n      }).sort((a, b) => a.date > b.date ? 1 : -1) || []);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        type === 'titleList' ?\r\n          articleList.map((item) => (\r\n            <p\r\n              className={styles['title']}\r\n              key={item.name}\r\n              onClick={() => {\r\n                props.loading()\r\n                setType('articleDetail');\r\n                getArticle(item.name).then((v) => {\r\n                  props.loading()\r\n                  v && setArticle({\r\n                    title: JSON.parse(decodeURIComponent(escape(atob(v.content)))).title,\r\n                    content: JSON.parse(decodeURIComponent(escape(atob(v.content)))).content,\r\n                    time: JSON.parse(decodeURIComponent(escape(atob(v.content)))).time,\r\n                    category: JSON.parse(decodeURIComponent(escape(atob(v.content)))).category,\r\n                    sha: v.sha\r\n                  })\r\n                })\r\n              }}\r\n            >\r\n              {item.name.slice(0, item.date === '9999/99/99' ? -3 : - 17)}\r\n            </p>\r\n          ))\r\n          :\r\n          <div>\r\n            <p className={styles['article-title']}>{article.title}</p>\r\n            <p className={styles['article-timestamp']}>\r\n              {\r\n                article.time ?\r\n                  <>\r\n                    <span\r\n                      className={styles['back']}\r\n                      onClick={() => {\r\n                        setType('titleList');\r\n                        setArticle({ title: '', content: '', time: '', category: '', sha: '' });\r\n                      }}\r\n                    >返回</span>\r\n                    {\r\n                      document.querySelector(':root').getAttribute('style') === '--mainColor: #f0f0f0' ?\r\n                        <span\r\n                          className={styles['back']}\r\n                          onClick={() => {\r\n                            removeArticle(article.title + '-' + article.time, article.sha).then(() => {\r\n                              location.reload()\r\n                            })\r\n                          }}\r\n                        >删除</span> : null\r\n                    }\r\n                    <span>{new Date(article.time).toLocaleString()}</span>\r\n                  </>\r\n                  : null\r\n              }\r\n            </p>\r\n            <Markdown\r\n              className={styles['article-content']}\r\n              source={article.content}\r\n              escapeHtml={false}\r\n            />\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Markdown from 'react-markdown/with-html';\r\nimport styles from '../index.module.css';\r\n\r\nimport { sendNewArticle } from '../utils/request';\r\n\r\nclass Push extends React.Component<\r\n  {\r\n    loading: Function;\r\n  },\r\n  {\r\n    text: string;\r\n    title: string;\r\n    category: string;\r\n  }\r\n  > {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: localStorage.getItem('writing-text') || '',\r\n      title: localStorage.getItem('writing-title') || '',\r\n      category: 'life',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.recorder = setInterval(() => {\r\n      const savedLength = (localStorage.getItem('writing-text') && localStorage.getItem('writing-text').length) || 0\r\n      if (Math.abs(savedLength - this.state.text.length) > 100) {\r\n        this.save()\r\n      }\r\n    }, 30000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.recorder)\r\n  }\r\n\r\n  recorder: any\r\n\r\n  clearInput = () => {\r\n    this.setState({ text: '', title: '' });\r\n    localStorage.removeItem('writing-title');\r\n    localStorage.removeItem('writing-text');\r\n  };\r\n\r\n  save = () => {\r\n    localStorage.setItem('writing-title', this.state.title);\r\n    localStorage.setItem('writing-text', this.state.text);\r\n    console.log((new Date).toLocaleString() + '，自动保存草稿成功！');\r\n  };\r\n\r\n  push = () => {\r\n    if (this.state.title) {\r\n      this.props.loading();\r\n      sendNewArticle(this.state.title, this.state.text, '技术').then(() => {\r\n        this.props.loading();\r\n        alert('恭喜，发布成功！');\r\n        this.clearInput();\r\n      })\r\n    } else {\r\n      alert('请输入标题。');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          className={styles['write-title']}\r\n          value={this.state.title}\r\n          onChange={e => { this.setState({ title: e.target.value }) }}\r\n        />\r\n        <div className={styles['editor-container']}>\r\n          <textarea\r\n            onChange={e => { this.setState({ text: e.target.value }) }}\r\n            className={styles['write-textarea']}\r\n            value={this.state.text}\r\n          />\r\n          <Markdown source={this.state.text} className={styles['parseMarkdown']} escapeHtml={false} />\r\n        </div>\r\n        <div>\r\n          <button onClick={this.push} className={styles['submitButton']}>\r\n            发布\r\n          </button>\r\n          <button className={styles['submitButton']} onClick={this.clearInput}>重置</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Push;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Article from './pages/article';\r\nimport Write from './pages/write';\r\n\r\nimport styles from './index.module.css';\r\n\r\nexport default class Layout extends React.Component {\r\n  state = {\r\n    loading: false\r\n  }\r\n\r\n  loading = () => { this.setState({ loading: !this.state.loading }) }\r\n\r\n  coloring = (e) => {\r\n    document.querySelector(':root').setAttribute('style', '--mainColor: ' + e.target.value)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <nav className={styles['sider-menu']}>\r\n          <span>xzq <label htmlFor=\"color\">👫</label> zjn</span>\r\n          <Link to=\"/\">\r\n            <ruby>记录<rt>ji lu</rt></ruby>\r\n          </Link>\r\n          <Link to=\"/write\">\r\n            <ruby>写作<rt>xie zuo</rt></ruby>\r\n          </Link>\r\n          <input type=\"color\" id=\"color\" onChange={this.coloring} />\r\n          <div className={styles.flagcounter} title=\"一个简单的访问量统计\"></div>\r\n        </nav>\r\n        <div className={styles['content']}>\r\n          <Switch>\r\n            <Route exact path=\"/\"><Article loading={this.loading} /></Route>\r\n            <Route exact path=\"/write\"><Write loading={this.loading} /></Route>\r\n          </Switch>\r\n        </div>\r\n        {this.state.loading ? <div className={styles['loading']}></div> : <div className={styles['loaded']}></div>}\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}